// -------------------------------------------------------------
// Real Estate CRM - Core Auth Schema (with Relations)
// Database: PostgreSQL (Neon)
// ORM: Prisma
// -------------------------------------------------------------

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -------------------------------------------------------------
// üè¢ Department Model
// -------------------------------------------------------------
model Department {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  roles     Role[]   // One department ‚Üí many roles
  users     User[]   // One department ‚Üí many users
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// -------------------------------------------------------------
// üß© Role Model (Now belongs to Department)
// -------------------------------------------------------------
model Role {
  id            Int        @id @default(autoincrement())
  name          String
  departmentId  Int        // Each role belongs to a department
  department    Department @relation(fields: [departmentId], references: [id])
  users         User[]     // One role ‚Üí many users
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  // Prevent duplicate role names within same department
  @@unique([name, departmentId])
  @@index([departmentId])
}

// -------------------------------------------------------------
// üë§ User Model
// -------------------------------------------------------------
model User {
  id           Int        @id @default(autoincrement())
  name         String
  email        String     @unique
  password     String
  isActive     Boolean    @default(true)

  // Foreign keys
  departmentId Int?
  roleId       Int

  // Relations
  department   Department? @relation(fields: [departmentId], references: [id])
  role         Role        @relation(fields: [roleId], references: [id])

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([email])
  @@index([departmentId])
  @@index([roleId])
}
